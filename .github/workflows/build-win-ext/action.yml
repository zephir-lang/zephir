name: 'Zephir Stub PHP Extension Build'
description: 'Build Stub extension for Windows according to various php versions.'

inputs:
  php_version:
    description: 'PHP version to build for (e.g: 7.4, 8.0)'
    required: true
  ts:
    description: 'Thread Safety'
    required: false
    default: 'nts'
  msvc:
    description: 'Microsoft Visual C++ compiler toolset prefix (e.g: vc14, vs15, vs16)'
    required: true
  arch:
    description: 'Target architecture (x64, x86)'
    required: false
    default: 'x64'
  install_dir:
    description: 'Target directory for php-sdk tools installation (e.g: C:\tools)'
    required: false
    default: 'C:\tools'
  cflags:
    description: 'CFLAGS for MSVC compiler'
    required: false
    default: ''
  ldflags:
    description: 'LDFLAGS for Linker'
    required: false
    default: ''

runs:
  using: 'composite'
  steps:
    - name: Setup Downloads Cache
      uses: actions/cache@v3
      with:
        path: ${{ env.CACHE_DIR }}
        key: ${{ runner.os }}-downloads-${{ hashFiles('**/.github/workflows/build-win-ext/actions.yml') }}
        restore-keys: |
          ${{ runner.os }}-downloads-${{ env.cache-name }}-
          ${{ runner.os }}-downloads-
          ${{ runner.os }}

    - name: Setup Prerequisites
      shell: powershell
      run: |
        Write-Output "::group::Install dependencies"
        choco install --no-progress -y --cache-location=${{ env.CACHE_DIR }}\Choco re2c
        Write-Output "::endgroup::"

        Write-Output "Install PowerShell PHP Manager module"
        if (Get-Module -ListAvailable -Name PhpManager) {
          Write-Host "PhpManager powershell module exist, skip install"
        } else {
          Install-Module -Name PhpManager -Repository PSGallery -Force
        }
        Write-Output "::endgroup::"

    - name: Setup PHP SDK Tool Kit
      uses: zephir-lang/setup-php-sdk@v1
      with:
        php_version: ${{ inputs.php_version }}
        ts: ${{ inputs.ts }}
        msvc: ${{ inputs.msvc }}
        arch: ${{ inputs.arch }}
        install_dir: ${{ inputs.install_dir }}
        cache_dir: ${{ env.CACHE_DIR }}

    - name: Configure Developer Command Prompt for MSVC compiler
      uses: ilammy/msvc-dev-cmd@v1
      with:
        arch: ${{ inputs.arch }}

    # Workaround for Windows-2019 and PHP 7.4 with old msvc version
    # PHP Warning:  PHP Startup: Can't load module 'C:\tools\php\ext\php_stub.dll'
    # as it's linked with 14.29, but the core is linked with 14.16 in Unknown on line 0
    - name: Configure Developer Command Prompt for MSVC compiler
      if: inputs.php_version == '7.4'
      uses: ilammy/msvc-dev-cmd@v1.10.0
      with:
        arch: ${{ inputs.arch }}
        toolset: 14.16

    - name: Generate C code
      shell: powershell
      run: |
        Write-Output "::group::Zephir generate"
        php zephir generate
        Write-Output "::endgroup::"

    - name: PHPIZE
      shell: powershell
      working-directory: ext
      run: phpize

    - name: Configure
      shell: powershell
      working-directory: ext
      env:
        CFLAGS: ${{ inputs.cflags }}
        CXXFLAGS: ${{ inputs.cflags }}
        LDFLAGS: ${{ inputs.ldflags }}
      run: |
        Write-Output "::group::Configure"
        .\configure.bat --enable-stub --with-prefix=${{ env.PHP_ROOT }}
        Write-Output "::endgroup::"

    - name: Zephir compile
      shell: powershell
      run: php zephir compile `
        -Wnonexistent-function `
        -Wnonexistent-class `
        -Wunused-variable `
        -Wnonexistent-constant `
        -Wunreachable-code `
        -Wnot-supported-magic-constant `
        -Wnon-valid-decrement

    - name: Compile
      shell: powershell
      working-directory: ext
      run: nmake 1> ..\compile.log

    - name: Install Extension
      shell: powershell
      working-directory: ext
      run: |
        $ReleaseFolder = if ("${{ inputs.ts }}" -eq "ts") { "Release_TS" } else { "Release" }
        $ReleaseFolder = if ("${{ inputs.arch }}" -eq "x64") { "x64\${ReleaseFolder}" } else { "${ReleaseFolder}" }

        $DllPath = "${env:GITHUB_WORKSPACE}\ext\${ReleaseFolder}\php_stub.dll"

        Write-Output "DLL_PATH=${DllPath}" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

        Copy-Item -Path "${DllPath}" -Destination "${{ env.PHP_ROOT }}\ext\"
        Enable-PhpExtension -Extension 'stub' -Path "${{ env.PHP_ROOT }}"

    - name: Check Stub Extension after build
      shell: powershell
      run: |
        Write-Output "::group::PHP path"
        Get-Php (Get-Command php).Path
        Write-Output "::endgroup::"

        Write-Output "::group::PHP Extension directory"
        dir ${{ env.PHP_ROOT }}\ext
        Write-Output "::endgroup::"

        Write-Output "::group::PHP ini"
        php --ini
        Write-Output "::endgroup::"

        Write-Output "::group::Extensions in PHP ini"
        php -r "echo php_ini_loaded_file();"
        (cat $(php -r "echo php_ini_loaded_file();") | Select-String -Pattern "^;?extension(\s+)?=").Line
        Write-Output "::endgroup::"
